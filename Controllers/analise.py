from collections import defaultdict

class AnalisePreditiva:
    def __init__(self, historico):
        self.historico = historico

    def calcular_risco(self, temperatura, umidade, tipo_vegetacao):
        risco = 0
        # Fatores baseados em regras simples (escalados at√© 10)
        if temperatura >= 35:
            risco += 3
        elif temperatura >= 28:
            risco += 2
        else:
            risco += 1
        if umidade < 20:
            risco += 3
        elif umidade < 40:
            risco += 2
        elif umidade < 60:
            risco += 1

        vegetacao_fator = {
            "√°rea urbana": 1,
            "pampas": 1,
            "caatinga": 2,
            "cerrado": 2,
            "mata atl√¢ntica": 3,
            "amaz√¥nia": 3
        }
        risco += vegetacao_fator.get(tipo_vegetacao.lower(), 2)
        return min(risco, 10)  # Cap no m√°ximo em 10

    def gerar_relatorio_de_risco(self, temperatura, umidade, tipo_vegetacao):
        risco = self.calcular_risco(temperatura, umidade, tipo_vegetacao)
        print("\nüîé AN√ÅLISE PREDITIVA DE RISCO DE QUEIMADA")
        print("-" * 50)
        print(f"Temperatura: {temperatura}¬∞C")
        print(f"Umidade: {umidade}%")
        print(f"Tipo de Vegeta√ß√£o: {tipo_vegetacao.capitalize()}")
        print(f"\n‚Üí Grau estimado de risco de queimada: {risco}/10")
        if risco >= 9:
            print("‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è Risco ALT√çSSIMO! Medidas urgentes s√£o recomendadas.")
        elif risco >= 7:
            print("‚ö†Ô∏è‚ö†Ô∏è Risco ALTO. Monitoramento constante necess√°rio.")
        elif risco >= 4:
            print("‚ö†Ô∏è Risco MODERADO. Aten√ß√£o recomendada.")
        elif risco >= 2:
            print("‚úÖ Risco BAIXO. Aten√ß√£o opicional.")
        else:
            print("‚úÖ Risco M√çNIMO. Condi√ß√µes controladas.")
        print("-" * 50)
